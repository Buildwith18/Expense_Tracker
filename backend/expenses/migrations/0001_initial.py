# Generated by Django 5.1.5 on 2025-10-09 06:18

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('type', models.CharField(choices=[('budget_alert', 'Budget Alert'), ('expense_added', 'Expense Added'), ('recurring_generated', 'Recurring Expense Generated'), ('budget_exceeded', 'Budget Exceeded')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Brief description of the expense', max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount spent', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('category', models.CharField(choices=[('food', 'Food'), ('transport', 'Transport'), ('entertainment', 'Entertainment'), ('utilities', 'Utilities'), ('healthcare', 'Healthcare'), ('shopping', 'Shopping'), ('education', 'Education'), ('travel', 'Travel'), ('other', 'Other')], default='other', help_text='Category of the expense', max_length=20)),
                ('date', models.DateField(help_text='Date when the expense occurred')),
                ('description', models.TextField(blank=True, help_text='Additional details about the expense (optional)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this expense record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this expense record was last updated')),
                ('user', models.ForeignKey(help_text='User who created this expense', on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expense',
                'verbose_name_plural': 'Expenses',
                'db_table': 'expenses',
                'ordering': ['-date', '-created_at'],
                'indexes': [models.Index(fields=['user', 'date'], name='expenses_user_id_513cb5_idx'), models.Index(fields=['user', 'category'], name='expenses_user_id_ed2a40_idx'), models.Index(fields=['date'], name='expenses_date_a77b87_idx')],
            },
        ),
        migrations.CreateModel(
            name='RecurringExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Brief description of the recurring expense', max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount for each occurrence', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('category', models.CharField(choices=[('food', 'Food'), ('transport', 'Transport'), ('entertainment', 'Entertainment'), ('utilities', 'Utilities'), ('healthcare', 'Healthcare'), ('shopping', 'Shopping'), ('education', 'Education'), ('travel', 'Travel'), ('other', 'Other')], default='other', help_text='Category of the recurring expense', max_length=20)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', help_text='How often this expense occurs', max_length=10)),
                ('start_date', models.DateField(help_text='When this recurring expense starts')),
                ('end_date', models.DateField(blank=True, help_text='When this recurring expense ends (optional)', null=True)),
                ('next_date', models.DateField(help_text='Next occurrence date')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this recurring expense is active')),
                ('description', models.TextField(blank=True, help_text='Additional details about the recurring expense', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='User who created this recurring expense', on_delete=django.db.models.deletion.CASCADE, related_name='recurring_expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recurring Expense',
                'verbose_name_plural': 'Recurring Expenses',
                'db_table': 'recurring_expenses',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='recurring_e_user_id_14aec8_idx'), models.Index(fields=['next_date'], name='recurring_e_next_da_fa083b_idx')],
            },
        ),
    ]
